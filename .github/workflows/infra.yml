name: Terraform and Ansible Workflow

on:
  workflow_call:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      tfpath:
        description: 'terraform source dir'
        required: false
        default: 'lab-kafka/terraform'
      destroy:
        description: 'When TRUE the destroy will be fired instead of apply'
        type: boolean
        required: true
        default: false
jobs:
  terraform:
    name: Terraform plan & apply
    runs-on: ubuntu-latest
    steps:
    - name: Checkout tf code in runner environment
      uses: actions/checkout@v3.5.2

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Setup Tfenv
      uses: rhythmictech/actions-setup-tfenv@v0.0.4

    - name: Terraform init
      env:
          TF_VAR_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        echo "** Running Terraform Init**"
        make init
        
        echo "** Running Terraform Validate**"
        terraform validate
      working-directory: ${{ github.event.inputs.tfpath }}

    - name: Terraform plan and apply
      env:
          TF_VAR_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      if: ${{ inputs.destroy != true }}
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"        
        echo "** Running Terraform Plan**"
        make plan
        echo "** Running Terraform Apply**"
        make apply
      working-directory: ${{ github.event.inputs.tfpath }}

    - name: Upload env file
      if: ${{ inputs.tfpath && inputs.destroy != true }}
      uses: actions/upload-artifact@v3
      with:
        name: env_file
        path: ${{ github.workspace }}/lab-kafka/ansible-playbooks/.env

    - name: Upload inventory file
      if: ${{ inputs.tfpath && inputs.destroy != true }}
      uses: actions/upload-artifact@v3
      with:
        name: ansible_inventory_file
        path: ${{ github.workspace }}/lab-kafka/ansible-aws-inventory/inventory.ini

    - name: Terraform Destroy
      if: ${{ inputs.tfpath && inputs.destroy }}
      run: |
        echo "** Running Terraform Destroy**"
        make destroy
      working-directory: ${{ github.event.inputs.tfpath }}

  ansible:
    runs-on: ubuntu-latest
    if: ${{ inputs.destroy != true }}
    needs: terraform
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.2

      - name: Download .env file
        uses: actions/download-artifact@v3
        with:
          name: env_file
          path: ${{ github.workspace }}/lab-kafka/ansible-playbooks
            
      - name: Download inventory file
        uses: actions/download-artifact@v3
        with:
          name: ansible_inventory_file
          path: ${{ github.workspace }}/lab-kafka/ansible-aws-inventory

      - name: See env file
        run: |
          unzip -o env_file | cat .env
        working-directory: ${{ github.workspace }}/lab-kafka/ansible-playbooks

      - name: See inventory
        run: |
          unzip -o ansible_inventory_file | cat inventory.ini
        working-directory: ${{ github.workspace }}/lab-kafka/ansible-aws-inventory

      - name: Extract bastion_host IP address
        id: extract_bastion_ip
        run: |
          bastion_ip=$(grep 'bastion_host ansible_host=' lab-kafka/ansible-aws-inventory/inventory.ini | awk -F '=' '{print $2}')
          echo "Bastion Host IP: $bastion_ip"
          echo "::set-output name=bastion_ip::$bastion_ip"

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ steps.extract_bastion_ip.outputs.bastion_ip }} >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Run Ansible Playbooks
        run: |
          ansible-playbook ansible-playbooks/docker-setup.yml
          ansible-playbook ansible-playbooks/kafka-setup.yml --extra-vars "node_number=1"
          ansible-playbook ansible-playbooks/kafka-setup.yml --extra-vars "node_number=2"
          ansible-playbook ansible-playbooks/kafka-setup.yml --extra-vars "node_number=3"
          ansible-playbook ansible-playbooks/cloudwatch_logs_setup.yml

        working-directory: ${{ github.workspace }}/lab-kafka
