name: Terraform AWS Workflow

on:
  workflow_call:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      tfpath:
        description: 'terraform source dir'
        required: true
        default: 'lab-kafka/terraform'
      destroy:
        description: 'When TRUE the `tf_apply` job will be skipped and `tf_destroy` will be fired instead'
        type: boolean
        required: true
        default: false
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tf_setup:
    name: Terraform setup
    runs-on: ubuntu-latest
    if:  ${{ inputs.tfpath }}
    steps:
    - name: Checkout tf code in runner environment
      uses: actions/checkout@v3.5.2

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Setup Tfenv
      uses: rhythmictech/actions-setup-tfenv@v0.0.4

    - name: Terraform init and validate
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        echo "** Running Terraform Init**"
        make init
        
        echo "** Running Terraform Validate**"
        terraform validate
      working-directory: ${{ github.event.inputs.tfpath }}
  tf_apply:
    name: Terraform plan and apply
    runs-on: ubuntu-latest
    if: ${{ inputs.tfpath && inputs.destroy != true }}
    steps:
    - name: Terraform plan and apply
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"        
        echo "** Running Terraform Plan**"
        terraform plan
        
        echo "** Running Terraform Apply**"
        make plan
        echo "** Running Terraform Apply**"
        make apply
      working-directory: ${{ github.event.inputs.tfpath }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: env-file
        path: ansible-playbooks/.env
  tf_destroy:
    name: Terraform destroy
    runs-on: ubuntu-latest
    if: ${{ inputs.tfpath && inputs.destroy }}
    steps:
      - name: Terraform Destroy
        run: |
          echo "** Running Terraform Destroy**"
          make destroy
        working-directory: ${{ github.event.inputs.tfpath }}
